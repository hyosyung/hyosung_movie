{"version":3,"sources":["routes/About.js","components/Movie.js","routes/Home.js","components/Navigation.js","routes/Detail.js","App.js","index.js"],"names":["About","className","Movie","title","year","summary","poster","genres","to","pathname","state","src","alt","map","genre","idx","key","length","slice","List_movies","Home","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","Navigation","Detail","props","location","history","undefined","push","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"oUAceA,MAXf,WACE,OACE,yBAAKC,UAAU,oBACb,+PAIA,gE,gFC6BSC,MAlCf,YAA0D,IAAzCC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC7C,OACE,yBAAKN,UAAU,SACb,kBAAC,IAAD,CAAMO,GAAI,CAACC,SAAU,gBAAiBC,MAAM,CAACN,OAAKD,QAAME,UAAQC,SAAOC,YACvE,yBAAKN,UAAU,eAAeU,IAAKL,EAAQM,IAAKT,EAAOA,MAAOA,IAC9D,yBAAKF,UAAU,cACb,wBAAIA,UAAU,eAAeE,GAC7B,wBAAIF,UAAU,cAAcG,GAC5B,wBAAIH,UAAU,gBACXM,EAAOM,KAAI,SAACC,EAAOC,GAClB,OACE,wBAAIC,IAAKD,EAAKd,UAAU,eACrBa,OAKT,uBAAGb,UAAU,iBACVI,EAAQY,OAAS,IAAMZ,EAAQa,MAAM,EAAG,KAAO,MAAQb,OClB5Dc,G,MAAW,4DAiDFC,E,4MA9CbV,MAAQ,CACNW,WAAW,EACXC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IAAIP,GALV,gBAGEG,EAHF,EAERK,KACEA,KAAQL,OAIZ,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IAPzB,2C,kEAWVQ,KAAKN,c,+BAIG,IAAD,EACuBM,KAAKnB,MAA3BW,EADD,EACCA,UAAWC,EADZ,EACYA,OACnB,OACE,6BAASrB,UAAU,aAChBoB,EACC,yBAAKpB,UAAU,UACb,0BAAMA,UAAU,eAAhB,iBAGF,yBAAKA,UAAU,UACZqB,EAAOT,KAAI,SAACiB,GAAD,OACV,kBAAC,EAAD,CACEd,IAAKc,EAAMC,GACX3B,KAAM0B,EAAM1B,KACZD,MAAO2B,EAAM3B,MACbE,QAASyB,EAAMzB,QACfC,OAAQwB,EAAME,mBACdzB,OAAQuB,EAAMvB,kB,GAtCX0B,IAAMC,W,MCMVC,MATf,WACE,OACE,yBAAKlC,UAAU,OACb,kBAAC,IAAD,CAAMO,GAAG,KAAT,QACA,kBAAC,IAAD,CAAMA,GAAG,WAAT,WCWS4B,E,kLAhBQ,IAAD,EACYP,KAAKQ,MAA3BC,EADU,EACVA,SAAUC,EADA,EACAA,aACKC,IAAnBF,EAAS5B,OACX6B,EAAQE,KAAK,O,+BAIP,IACAH,EAAaT,KAAKQ,MAAlBC,SACR,OAAIA,EAAS5B,MACJ,8BAAO4B,EAAS5B,MAAMP,OAEtB,S,GAbQ8B,IAAMC,WCkBZQ,MAXf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAWzB,IACxC,kBAAC,IAAD,CAAOuB,KAAK,SAASE,UAAW7C,IAChC,kBAAC,IAAD,CAAO2C,KAAK,gBAAgBE,UAAWT,MCX7CU,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.96cc92fd.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./About.css\";\r\n\r\nfunction About() {\r\n  return (\r\n    <div className=\"about__container\">\r\n      <span>\r\n        이 웹사이트는 김효성이 처음으로 리액트를 이용하여 만들어 본 영화 앱\r\n        페이지입니다.\r\n      </span>\r\n      <span>문의 : 010-8695-3456</span>\r\n    </div>\r\n  );\r\n}\r\nexport default About;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Movie({ title, year, summary, poster, genres }) {\r\n  return (\r\n    <div className=\"movie\">\r\n      <Link to={{pathname: '/movie-detail', state:{year,title,summary,poster,genres},}}>\r\n      <img className=\"movie_poster\" src={poster} alt={title} title={title} />\r\n      <div className=\"movie_data\">\r\n        <h3 className=\"movie_title\">{title}</h3>\r\n        <h5 className=\"movie_year\">{year}</h5>\r\n        <ul className=\"movie_genres\">\r\n          {genres.map((genre, idx) => {\r\n            return (\r\n              <li key={idx} className=\"movie_genre\">\r\n                {genre}\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n        <p className=\"movie_summary\">\r\n          {summary.length > 250 ? summary.slice(0, 250) + \"...\" : summary}\r\n        </p>\r\n      </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nMovie.propTypes = {\r\n  year: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n}; //Movie의 prop-types 저장!\r\n\r\nexport default Movie;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Movie from \"../components/Movie\";\r\nimport './Home.css';\r\n\r\nconst List_movies = `https://yts-proxy.now.sh/list_movies.json?sort_by=rating`;\r\n\r\nclass Home extends React.Component {\r\n  state = {\r\n    isLoading: true,\r\n    movies: [],\r\n  };\r\n\r\n  getMovies = async () => {\r\n    const {\r\n      data: {\r\n        data: { movies },\r\n      }, //받아온 객체 안에 접근하여 가져오기!! movies라는 이름을 그대로 쓸 수 있다\r\n    } = await axios.get(List_movies);\r\n    //await가 끝난 뒤에 setstate가 실행-> isLoading이 false로 바뀜\r\n    this.setState({ movies, isLoading: false }); //movies:movies를 movies로 축약할 수 있다!\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getMovies();\r\n    //개발자 도구 -> network탭 -> name의 json 확인!\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, movies } = this.state; //구조분해 할당 문법!\r\n    return (\r\n      <section className=\"container\">\r\n        {isLoading ? (\r\n          <div className=\"loader\">\r\n            <span className=\"loader text\">\"Loading...\"</span>\r\n          </div>\r\n        ) : (\r\n          <div className=\"movies\">\r\n            {movies.map((movie) => (\r\n              <Movie\r\n                key={movie.id}\r\n                year={movie.year}\r\n                title={movie.title}\r\n                summary={movie.summary}\r\n                poster={movie.medium_cover_image}\r\n                genres={movie.genres}\r\n              />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </section>\r\n    ); //중괄호 안에 삼항 연산자\r\n  }\r\n}\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Navigation.css\";\r\n\r\nfunction Navigation() {\r\n  return (\r\n    <div className=\"nav\">\r\n      <Link to=\"/\">Home</Link>\r\n      <Link to=\"./about\">About</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\n\r\nclass Detail extends React.Component {\r\n  componentDidMount() {\r\n    const { location, history } = this.props;\r\n    if (location.state === undefined) {\r\n      history.push(\"/\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { location } = this.props;\r\n    if (location.state) {\r\n      return <span>{location.state.title}</span>;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\nexport default Detail;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport About from \"./routes/About\";\nimport Home from \"./routes/Home\";\nimport Navigation from './components/Navigation';\nimport Detail from './routes/Detail';\n\n//라우터의 사용법을 알아두기!\nfunction App() {\n  return (\n    <HashRouter>\n      <Navigation/>\n      <Route path=\"/\" exact={true} component={Home} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/movie-detail\" component={Detail}/>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n//ReactDOM.render 함수의 동작 원리 -> App.js의 컴포넌트를 아이디가 root인 엘리먼트에 그린다.\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}